type RideRequest {
  id: Int!
  approved: Boolean!
  userId: Int!
  rideId: Int!
}
input respondToRequestInput {
  rideId: Int!
  requestId: Int!
  approved: Boolean!
}
input getRequests {
  rideId: Int!
}
input joinRideInput {
  rideId: Int!
}
extend type Query {
  getRideRequests(input: getRequests!): [RideRequest]!
}
extend type Mutation {
  respondToRideRequest(input: respondToRequestInput!): RideRequest!
  joinRide(input: joinRideInput!): RideRequest!
}
